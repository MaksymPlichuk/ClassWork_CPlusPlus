
#include <iostream>
using namespace std;
/*Конструктор та деструктор
Завдання 1:
Створити клас Rectangle, який буде описувати прямокутник. Клас містить розміри: ширина, висота, символ, який відображатиме прямокутник на екрані та координати розміщення. Для збереження координат створити структуру Coord, яка міститиме X та Y координату.
Клас повинен містити наступні конструктори:
•	Конструктор по замовчуванню, який встановлюватиме «дефолтні» дані
•	Параметризований конструктор, який приймає один параметр «розмір» та ініціалізує ним ширину та висоту
•	Параметризований конструктор, який приймає два параметри «ширину» та «висоту», які являються розмірами об’єкта
Та наступні методи:
•	Вивід фігури на екран, відповідного розміру, символом та у відповідних координатах
•	Зміна розміру прямокутника. Метод приймає два парметри: 1 – зміна висоти, 2 – ширини
•	Переміщення прямокутника. Метод приймає два парметри: 1 – величина переміщення по осі X, 2 – по осі Y
Методи повинні включати перевірку на коректність даних (від’ємна ширина, координати і тд). Створити екземпляр об’єкту та протестувати написаті методи.
Завдання 2:
Створити клас Student який буде містити характеристики: ім’я, вік, колекція оцінок, кількість оцінок та середню оцінку.
В класі повинні буди реалізовані наступні конструктори:
•	Конструктор по замовчуванню () – встановлюватиме початкові дані
•	Параметризований конструктор (const char* name, int age) – ініціалізує клас значеннями з параметрів
Також створити деструктор для звільнення ресурсів та наступні методи:
1.	Print () – виводить інформацію про студента на екран
2.	AddMark (int mark) – додає оцінку для студента
3.	SetAverageMark () – приватний метод для обрахунку та встановлення середньої оцінки студента (викликається всередині класа при додаванні оцінки)
4.	Save () – збереження студента в файл
5.	Load () – зчитування студента в файла
Забезпечити клас необхідними методами для доступа до властивостей (getters, setters). По можливості застосувати делегування конструкторів.
*/

class Rectangle {




};

int main()
{
    std::cout << "Hello World!\n";
}
